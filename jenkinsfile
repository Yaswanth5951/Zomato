pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME=tool 'sonar-token'
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git branch: 'main', url: 'https://github.com/Yaswanth5951/Zomato.git'
            }
        }
        stage('Sonarqube Analysis'){
            steps{
                withSonarQubeEnv('SONAR_TOKEN') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.organization=zomato1 -Dsonar.projectKey=zomato1_order '''
                }
            }
            }
            stage("quality gate"){
           steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'SONAR-TOKEN' 
                }
            } 
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage("Docker Build & Push"){
            steps{
                script{
                   withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){ 
                       sh "docker login -u yaswanth59 -p Yaswanth@123"
                       sh "docker build -t zomato ."
                       sh "docker tag zomato yaswanth59/zomato:latest "
                       sh "docker push yaswanth59/zomato:latest "
                   }
                }
            }
        }
        
         stage("TRIVY"){
            steps{
                sh "trivy image yaswanth59/zomato:latest > trivy.txt" 
            }
        }
        stage('Deploy to container'){
            steps{
                sh 'docker run -d --name zomato -p 3000:3000 yaswanth59/zomato:latest'
            }
         }
        }
    }
